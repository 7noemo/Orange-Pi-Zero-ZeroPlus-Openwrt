name: Build OpenWrt Zero Plus

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: orange-pi-zero-plus.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Clean up disk space (Critical)
      run: |
        sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker system prune -a -f
        df -h

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install --no-install-recommends \
          ack antlr3 asciidoc autoconf automake autopoint binutils bison \
          build-essential bzip2 ccache cmake cpio curl device-tree-compiler \
          fastjar flex gawk gettext gcc-multilib g++-multilib git gperf \
          haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev \
          libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
          libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip \
          p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
          python3-setuptools qemu-utils rsync scons squashfs-tools \
          subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code (Shallow Clone)
      working-directory: /workdir
      run: |
        git clone --depth 1 --filter=blob:none "$REPO_URL" -b "$REPO_BRANCH" openwrt
        ln -sf /workdir/openwrt "$GITHUB_WORKSPACE/openwrt"

    - name: Load custom feeds
      run: |
        [ -e "$FEEDS_CONF" ] && mv "$FEEDS_CONF" openwrt/feeds.conf.default
        chmod +x "$DIY_P1_SH"
        cd openwrt
        "$GITHUB_WORKSPACE/$DIY_P1_SH"

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds (Skip Optional)
      run: |
        cd openwrt
        ./scripts/feeds install -a -p packages
        ./scripts/feeds install -a -p luci

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e "$CONFIG_FILE" ] && mv "$CONFIG_FILE" openwrt/.config
        chmod +x "$DIY_P2_SH"
        cd openwrt
        "$GITHUB_WORKSPACE/$DIY_P2_SH"

    - name: Download package (Skip Failed)
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j4 || true  # Continue even if some downloads fail
        find dl -size -1024c -delete  # Delete incomplete/corrupted downloads

    - name: Compile the firmware (Fallback to Single Core)
      id: compile
      run: |
        cd openwrt
        echo "Using $(nproc) cores for compilation"
        make -j$(($(nproc) - 1)) || make -j2 || make -j1 V=s
        echo "status=success" >> "$GITHUB_OUTPUT"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> "$GITHUB_ENV"
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> "$GITHUB_ENV"

    - name: Check space usage
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@v3
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages  # Save space by removing packages
        echo "FIRMWARE=$PWD" >> "$GITHUB_ENV"
        echo "status=success" >> "$GITHUB_OUTPUT"

    - name: Upload firmware directory
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> "$GITHUB_OUTPUT"
        echo "status=success" >> "$GITHUB_OUTPUT"

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/*

    - name: Post-cleanup
      run: |
        sudo rm -rf /workdir/openwrt/dl  # Free space after build
        df -h
